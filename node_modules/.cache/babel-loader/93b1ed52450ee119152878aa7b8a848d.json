{"ast":null,"code":"const initialState = {\n  posts: [{\n    id: 0,\n    title: \"ran\"\n  }]\n};\n\nconst Post_reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_POSTS':\n      return { ...state\n      };\n\n    case 'ADD_POSTS':\n      return { ...state,\n        posts: state.posts.concat(action.payload)\n      };\n\n    case 'UPDATE_POSTS':\n      var object = state.posts.find(value => action.ids == value.id);\n      object.title = action.val;\n      const b = state.posts.map(item => {\n        if (action.ids == item.id) return object;else return item;\n      });\n      return { ...state,\n        posts: b\n      };\n\n    case 'DELETE_POST':\n      const a = state.posts.filter(value => {\n        if (value.id != action.payload) {\n          return value;\n        }\n      });\n      return { ...state,\n        posts: a\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = Post_reducer;\nexport default Post_reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post_reducer\");","map":{"version":3,"names":["initialState","posts","id","title","Post_reducer","state","action","type","concat","payload","object","find","value","ids","val","b","map","item","a","filter"],"sources":["/home/pushparajsigh/Desktop/Redux_Running_project/myapp/src/Redux/reducers/reducer.js"],"sourcesContent":["\nconst initialState ={\n    posts: [{id:0, title:\"ran\"}],\n}\nconst Post_reducer = (state = initialState ,action) =>{\n   \n    switch(action.type){ \n        case 'GET_POSTS':\n            return {\n                ...state\n            }\n        case 'ADD_POSTS':\n            return {\n            ...state,\n            posts : state.posts.concat(action.payload)\n        }\n        case 'UPDATE_POSTS':\n            var object = state.posts.find(value => action.ids == value.id)\n            object.title = action.val;\n            const b = state.posts.map((item)=>{\n                if(action.ids == item.id)\n                return object;\n                else\n                return item;\n              })\n            return {\n                ...state,\n\n                posts : b\n            }\n         \n        case 'DELETE_POST':  \n            const a = state.posts.filter((value) => {\n                \n             if(value.id != action.payload)\n             {\n                return value;\n             }\n         })\n            return {\n               ...state,\n                  posts:a\n            }\n\n        default:\n            return {\n                ...state }\n    }\n}\nexport default Post_reducer;"],"mappings":"AACA,MAAMA,YAAY,GAAE;EAChBC,KAAK,EAAE,CAAC;IAACC,EAAE,EAAC,CAAJ;IAAOC,KAAK,EAAC;EAAb,CAAD;AADS,CAApB;;AAGA,MAAMC,YAAY,GAAG,YAAiC;EAAA,IAAhCC,KAAgC,uEAAxBL,YAAwB;EAAA,IAAVM,MAAU;;EAElD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,WAAL;MACI,OAAO,EACH,GAAGF;MADA,CAAP;;IAGJ,KAAK,WAAL;MACI,OAAO,EACP,GAAGA,KADI;QAEPJ,KAAK,EAAGI,KAAK,CAACJ,KAAN,CAAYO,MAAZ,CAAmBF,MAAM,CAACG,OAA1B;MAFD,CAAP;;IAIJ,KAAK,cAAL;MACI,IAAIC,MAAM,GAAGL,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAiBC,KAAK,IAAIN,MAAM,CAACO,GAAP,IAAcD,KAAK,CAACV,EAA9C,CAAb;MACAQ,MAAM,CAACP,KAAP,GAAeG,MAAM,CAACQ,GAAtB;MACA,MAAMC,CAAC,GAAGV,KAAK,CAACJ,KAAN,CAAYe,GAAZ,CAAiBC,IAAD,IAAQ;QAC9B,IAAGX,MAAM,CAACO,GAAP,IAAcI,IAAI,CAACf,EAAtB,EACA,OAAOQ,MAAP,CADA,KAGA,OAAOO,IAAP;MACD,CALO,CAAV;MAMA,OAAO,EACH,GAAGZ,KADA;QAGHJ,KAAK,EAAGc;MAHL,CAAP;;IAMJ,KAAK,aAAL;MACI,MAAMG,CAAC,GAAGb,KAAK,CAACJ,KAAN,CAAYkB,MAAZ,CAAoBP,KAAD,IAAW;QAEvC,IAAGA,KAAK,CAACV,EAAN,IAAYI,MAAM,CAACG,OAAtB,EACA;UACG,OAAOG,KAAP;QACF;MACJ,CANY,CAAV;MAOA,OAAO,EACJ,GAAGP,KADC;QAEDJ,KAAK,EAACiB;MAFL,CAAP;;IAKJ;MACI,OAAO,EACH,GAAGb;MADA,CAAP;EAvCR;AA0CH,CA5CD;;KAAMD,Y;AA6CN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}