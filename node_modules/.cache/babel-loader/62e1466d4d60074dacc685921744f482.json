{"ast":null,"code":"var _this = this;\n\nconst initialState = {\n  posts: []\n};\n\nconst Post_reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_POSTS':\n      return { ...state\n      };\n\n    case 'ADD_POSTS':\n      return { ...state,\n        posts: state.posts.concat(action.payload)\n      };\n\n    case 'UPDATE_POSTS':\n      var object = _this.props.data.find(value => action.ids == ids);\n\n      object.title = val;\n      return { ...state,\n        posts: state.posts.action.payload\n      };\n\n    case 'DELETE_POST':\n      const a = state.posts.filter(value => {\n        if (value.id != action.payload) {\n          return value;\n        }\n      });\n      return { ...state,\n        posts: a\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = Post_reducer;\nexport default Post_reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post_reducer\");","map":{"version":3,"names":["initialState","posts","Post_reducer","state","action","type","concat","payload","object","props","data","find","value","ids","title","val","a","filter","id"],"sources":["/home/pushparajsigh/Desktop/Redux_Running_project/myapp/src/Redux/reducers/reducer.js"],"sourcesContent":["\nconst initialState ={\n    posts: [],\n}\nconst Post_reducer = (state = initialState ,action) =>{\n   \n    switch(action.type){ \n        case 'GET_POSTS':\n            return {\n                ...state\n            }\n        case 'ADD_POSTS':\n            return {\n            ...state,\n            posts : state.posts.concat(action.payload)\n        }\n        case 'UPDATE_POSTS':\n            var object = this.props.data.find((value)=> action.ids == ids);\n            object.title = val;\n            return {\n                ...state,\n                posts : state.posts.action.payload\n            }\n         \n        case 'DELETE_POST':  \n            const a = state.posts.filter((value) => {\n                \n             if(value.id != action.payload)\n             {\n                return value;\n             }\n         })\n            return {\n               ...state,\n                  posts:a\n            }\n\n        default:\n            return {\n                ...state }\n    }\n}\nexport default Post_reducer;"],"mappings":";;AACA,MAAMA,YAAY,GAAE;EAChBC,KAAK,EAAE;AADS,CAApB;;AAGA,MAAMC,YAAY,GAAG,YAAiC;EAAA,IAAhCC,KAAgC,uEAAxBH,YAAwB;EAAA,IAAVI,MAAU;;EAElD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,WAAL;MACI,OAAO,EACH,GAAGF;MADA,CAAP;;IAGJ,KAAK,WAAL;MACI,OAAO,EACP,GAAGA,KADI;QAEPF,KAAK,EAAGE,KAAK,CAACF,KAAN,CAAYK,MAAZ,CAAmBF,MAAM,CAACG,OAA1B;MAFD,CAAP;;IAIJ,KAAK,cAAL;MACI,IAAIC,MAAM,GAAG,KAAI,CAACC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAsBC,KAAD,IAAUR,MAAM,CAACS,GAAP,IAAcA,GAA7C,CAAb;;MACAL,MAAM,CAACM,KAAP,GAAeC,GAAf;MACA,OAAO,EACH,GAAGZ,KADA;QAEHF,KAAK,EAAGE,KAAK,CAACF,KAAN,CAAYG,MAAZ,CAAmBG;MAFxB,CAAP;;IAKJ,KAAK,aAAL;MACI,MAAMS,CAAC,GAAGb,KAAK,CAACF,KAAN,CAAYgB,MAAZ,CAAoBL,KAAD,IAAW;QAEvC,IAAGA,KAAK,CAACM,EAAN,IAAYd,MAAM,CAACG,OAAtB,EACA;UACG,OAAOK,KAAP;QACF;MACJ,CANY,CAAV;MAOA,OAAO,EACJ,GAAGT,KADC;QAEDF,KAAK,EAACe;MAFL,CAAP;;IAKJ;MACI,OAAO,EACH,GAAGb;MADA,CAAP;EAhCR;AAmCH,CArCD;;KAAMD,Y;AAsCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}